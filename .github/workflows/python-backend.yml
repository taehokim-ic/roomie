# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python FastAPI Back-End

on:
  push:
    branches: [ "backend" ]
  pull_request:
    branches: [ "backend" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./backend/
      run: |
        python3 -m pytest tests/


# Events that trigger a workflow:
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  deploy:
    # If the test & lint jobs don't pass,
    # the deploy job willn't even execute
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploying to Heroku
        # More details available at:
        # https://github.com/akhileshns/heroku-deploy
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key:  ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "roomie"
          heroku_email: "taehokimbusiness@gmail.com"
          # healthcheck: "https://roomie.herokuapp.com/healthcheck"
          appdir: "backend"
          procfile: "gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker"
          rollbackonhealthcheckfailed: true
